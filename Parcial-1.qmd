---
title: "Parcial 1"
author: "Julián Úsuga Ortiz - Ivan Santiago Rojas Martinez"
format: pdf
editor: visual
---

# 1.

Sea $X_t$ el proceso estocástico dado por:

$$
X_t = w_{t-2} + 0.5w_{t-1} + 2w_t+0.5w_{t+1} + w_{t+2}
$$

donde los $w_t$ son independientes con media $0$ y varianza $\sigma_w^2 = 4.8$.

# 2.

Sea $X_t$ el proceso estocastico estacionario dado por: $$
X_t = 3.1 + 0.9X_{t−1} − 0.6X_{t−2} + w_t$$ donde $w_t$ es ruido blanco gaussiano con media $0$ y varianza $\sigma_w^2 = 6.2$.

## a).

```{=tex}
\begin{equation*}
\begin{split}
 X_t & = 3.1 + 0.9X_{t-1} - 0.6X_{t-2} + w_t \\
\mu_t & = 3.1 + 0.9 \mu_t - 0.6 \mu_t \\
\mu_t & - 0.9 \mu_t + 0.6 \mu_t = 3.1 \\
(1&-0.9 + 0.6) \mu_t = 3.1 \\
\mu_t & = \frac{3.1}{1-0.9+0.6} = 4.4285
\end{split}
\end{equation*}
```
## b).

```{=tex}
\begin{equation*}
\begin{split}
var[X_t] & = cov[X_t, X_t] = cov[X_t, 3.1+0.9X_{t-1}-0.6X_{t-2}+w_t] \\
&=0.9cov[X_t, X_{t-1}] * 0.6cov[X_t, X_{t-2}]+ cov[X_t, w_t] \\
&=0.9\gamma(-1)-0.6 \gamma(-2) + \sigma^{2}_w
\end{split}
\end{equation*}
```
Como $var[X_t] = \gamma(0) = \sigma^{2}_x$

```{=tex}
\begin{equation*}
\begin{split}
&= 0.9\gamma(-1)-0.6\gamma(-2) \\
\gamma(0) &= 0.9 \gamma(-1)-0.6\gamma(-2)
\end{split}
\end{equation*}
```
Dividiendo por $\gamma(0)$

```{=tex}
\begin{equation*}
\begin{split}
1 &= 0.9 \frac{\gamma(-1)}{\gamma(0)}-0.6 \frac{\gamma(-2)}{\gamma(0)} + \frac{\sigma^{2}_w}{\gamma(0)} \\
1 &= 0.9\rho(1) - 0.6\rho(2) + \frac{\sigma^{2}_w}{\gamma(0)} \\
1&-0.9\rho(1)+0.6\rho(2) = \frac{\sigma^{2}_w}{\rho(0)} \\
\sigma^{2}_x &= \gamma(0) = \frac{\sigma^{2}_w}{1-0.9\rho(1) + 0.6\rho(2)}\\
\gamma(1) &= cov[X_{t-1}, 3.1 + 0.9X_{t-1}-0.6X_{t-2} + w_t]\\
&= cov[X_{t-1}, X_{t-1}]0.9-0.6cov[X_{t-1}, X_{t-2}] \\ 
&= \gamma(0)0.9-0.6\gamma(1) \\
1.6\gamma(1) &= \gamma(0)*0.9 \\
\gamma(1) &= \gamma(0) \frac{0.9}{1.6} \\
\rho(1) &= \frac{\gamma(0) 0.9/1.6}{\gamma(0)} = \frac{0.9}{1.6} \\ 
\gamma(2) &= cov[X_{t-2}, 3.1 + 0.9X_{t-1}-0.6X_{t-2} + w_t] \\
&= cov[X_{t-2}, X_{t-1}]0.9-0.6cov[X_{t-2}, X_{t-2}] \\ 
&= \gamma(1)0.9 - 0.6\gamma(0) \\
&= \gamma(0)\frac{0.9^2}{1.6}-0.6\gamma(0) \\
\rho(2) &= \frac{\gamma(2)}{\gamma(0)} = \frac{0.9^2}{1.6}-0.6 = -0.09375 \\ 
\end{split}
\end{equation*}
```
Por lo que:

```{=tex}
\begin{equation*}
\begin{split}
\gamma(0) &= \frac{6.2}{1-\frac{0.9^2}{1.6}+0.6(-0.09375)} \\
\gamma(0) &= \sigma^{2}_x \approx 14.1714
\end{split}
\end{equation*}
```
# 3.

## Paquetes usados:

```{r,  warning = FALSE, message = FALSE}
library(readxl)
library(tidyverse)
library(lubridate)
library(knitr)
library(xtable)
```

## Lectura de la Base de datos:

```{r, message=FALSE}
data_19 <- read_excel("data/Afluencia_Metro_2019.xlsx",
                      range = "A4:W3566",
                      col_names = FALSE)
data_20 <- read_excel("data/Afluencia_Metro.xlsx",
                      range = "A4:W3767",
                      col_names = FALSE)
data_21 <- read_excel("data/Afluencia_2021.xlsx",
                      range = "A4:W4125",
                      col_names = FALSE)

```

```{r, echo = FALSE}
metro.cols <- c(
  "fecha",
  "linea",
  "04:00",
  "05:00",
  "06:00",
  "07:00",
  "08:00",
  "09:00",
  "10:00",
  "11:00",
  "12:00",
  
  "13:00",
  "14:00",
  "15:00",
  "16:00",
  "17:00",
  "18:00",
  "19:00",
  "20:00",
  "21:00",
  "22:00",
  "23:00",
  "per.dia.tot"
) 

colnames(data_19) <- metro.cols
colnames(data_20) <- metro.cols
colnames(data_21) <- metro.cols
```

a).

Las dimensiones de los datos de 2019 son 3563 filas y 23 columnas.

Las dimensiones de los datos de 2020 son 3764 filas y 23 columnas.

Las dimensiones de los datos de 2021 son 4122 filas y 23 columnas.

b).

```{r}
datos_juntos <- bind_rows(data_19, data_20, data_21)
```

```{r, echo =FALSE}
rm(data_19, data_20, data_21)
```

Las dimensiones de los datos_juntos son 11449 filas y 23 columnas.

c).

```{r, echo = FALSE}
datos_juntos$fecha <- datos_juntos$fecha |> as_date()
```

```{r}
data <- pivot_longer(datos_juntos, cols = ends_with(":00"), 
                     names_to = "hora", values_to = "per.num")

data$hora <- hm(data$hora)
data$dia <- day(data$fecha)
data$dia.sem <- weekdays(data$fecha)
data$sem <- week(data$fecha)
data$mes <- month(data$fecha)
data$anio <- year(data$fecha)
```

Las dimensiones del data frame son 228980 filas y 10 columnas.

d).

```{r, echo = FALSE}
data$linea <- data$linea |> tolower() 
dat_lin_A <- data |> filter(linea == "línea a")
dat_lin_B <- data |> filter(linea == "línea b")
```

```{r, echo = FALSE}
dat_lin_A |> arrange(fecha, hora) |> head(5) %>% kable(., caption = "Linea A")
```

Las dimensiones de los datos de la linea A son 21860 filas y 10 columnas.

```{r, echo = FALSE}
dat_lin_B |> arrange(fecha, hora) |> head(5) %>% kable(., caption = "Linea B")
```

Las dimensiones de los datos de la linea B son 21860 filas y 10 columnas.

e).

El 23 de Marzo de 2020 el Gobierno de Colombia expidió el Decreto 457 para el período de aislamiento preventivo obligatorio a causa del virus del COVID-19.

```{r, echo = FALSE}
dat_lin_A <- dat_lin_A |>
  mutate(pandemia = if_else(fecha < dmy("23-03-2020"), "no", "si"))
dat_lin_B <- dat_lin_B |>
  mutate(pandemia = if_else(fecha < dmy("23-03-2020"), "no", "si"))
```

```{r, echo = FALSE, message=FALSE, out.width="115%"}
facet.names <- c(
  'si'="Despues de la pandemia",
  'no'="Antes de la pandemia"
)

dat_lin_A |>
  group_by(dia.sem, hora, pandemia) |>
  summarise(promedio = mean(per.num, na.rm = TRUE)) |>
  ggplot() +
  geom_line(aes(x = as_datetime(hora), y = promedio, color = dia.sem)) +
  scale_x_datetime(breaks = "1 hour", date_labels =  "%H:00") + 
  facet_grid(cols = vars(pandemia), labeller=as_labeller(facet.names)) +
  labs(title = "Promedio de pasajeros por hora para la linea A", 
       x = "Hora de servicio", 
       y = "Promedio de pasajeros") +
  scale_color_discrete(name = "Dia de la\nSemana")+
  theme(axis.text.x=element_text(angle=90))
```

Se puede observar que después de la pandemia se disminuyo aproximadamente a la mitad la afluencia de pasajeros en la **linea A** y durante las semanas el comportamiento es muy similar para antes de la pandemia y despues de la pandemia.

Los dias con menor a fluencia de pasajeros son los dias **sabado** y **domingo** 


```{r, echo = FALSE, message=FALSE, out.width="115%"}
facet.names <- c(
  'si'="Despues de la pandemia",
  'no'="Antes de la pandemia"
)

dat_lin_B |>
  group_by(dia.sem, hora, pandemia) |>
  summarise(promedio = mean(per.num, na.rm = TRUE)) |>
  ggplot() +
  geom_line(aes(x = as_datetime(hora), y = promedio, color = dia.sem)) +
  scale_x_datetime(breaks = "1 hour", date_labels =  "%H:00") + 
  facet_grid(cols = vars(pandemia), labeller=as_labeller(facet.names)) +
  labs(title = "Promedio de pasajeros por hora para la linea B", 
       x = "Hora de servicio", 
       y = "Promedio de pasajeros") +
  scale_color_discrete(name = "Dia de la\nSemana")+
  theme(axis.text.x=element_text(angle=90))
```

Se puede observar que después de la pandemia se disminuyo aproximadamente a la mitad la afluencia de pasajeros en la **linea B** y durante las semanas el comportamiento es muy similar para antes de la pandemia y despues de la pandemia.
Los dias con menor a fluencia de pasajeros son los dias **sabado** y **domingo** 



```{r, include = FALSE}
dat_lin_A %>% filter(., pandemia == "no") %>% 
  group_by(dia.sem, hora) %>% 
  summarise(promedio = mean(per.num, na.rm=TRUE))
```

f).

```{r, include = FALSE, eval = FALSE}
lin.a <- dat_lin_A |> 
  group_by(fecha) |> 
  summarise(dia = day(fecha), per.dia.tot = sum(per.num, na.rm=TRUE))


lin.b <- dat_lin_B |> 
  group_by(fecha) |> 
  summarise(per.dia.tot = sum(per.num, na.rm=TRUE))

# falta añadir día, día de la semana, semana, mes, año
# para lin.a y lin.b
```

```{r, warning= FALSE, message = FALSE}
lin.a <- dat_lin_A %>% 
  group_by(fecha) %>% 
  summarise(dia = day(fecha), dia.sem = weekdays(fecha), 
            sem = week(fecha), mes = month(fecha), anio = year(fecha), 
            per.dia.tot = sum(per.num, na.rm = TRUE))

lin.b <- dat_lin_B %>% 
  group_by(fecha) %>% 
  summarise(dia = day(fecha), dia.sem = weekdays(fecha), 
            sem = week(fecha), mes = month(fecha), anio = year(fecha), 
            per.dia.tot = sum(per.num, na.rm = TRUE))
```

```{r, echo = FALSE}
kable(head(lin.a), caption = "Linea A")
```

```{r, echo = FALSE}
kable(head(lin.b), caption = "Linea B")
```

g).

```{r, echo = FALSE, message=FALSE, warning=FALSE}
lin.a$linea <- "a"
lin.b$linea <- "b"

bind_rows(lin.a, lin.b) |> 
  ggplot(aes(x = fecha, y = per.dia.tot, color = linea)) +
  ylab("Personas")+
  labs(title = "Total de personas por dia")+
  geom_line()
```
Se ve una caída**(cisne negro)** en marzo de 2020 y una lenta recuperación, no se ha llegado a niveles de 2019.

```{r, echo = FALSE, warning=FALSE, message=FALSE}
# Esto es promedio por semana
bind_rows(lin.a, lin.b) |> 
  group_by(fecha = floor_date(fecha, unit = "week") ,linea) |> 
  summarise(prom.mes = mean(per.dia.tot)) |> 
  ggplot(aes(x = fecha, y = prom.mes, color = linea)) + 
  ylab("Personas")+
  labs(title = "Promedio de personas por semana")+
  geom_line()
```

Se observa que la linea  que cuenta con mayor afluencia de pasajeros es la **linea A**.

h).

```{r, echo = FALSE, warning=FALSE, message=FALSE}
bind_rows(dat_lin_A, dat_lin_B) |>
  filter(pandemia == "no") |>
  group_by(fecha, linea) |>
  summarise(tot = mean(per.num, na.rm = TRUE)) |>
  ggplot(aes(x= fecha, y = tot)) + 
  geom_line() +
  facet_grid(rows = vars(linea), scales = "free") +
  ylab("Promedio de personas")+
  labs(title = "Antes de la pandemia")
```

Para antes de la pandemia la linea a y b tuvieron un comportamiento muy similar.

Se ve que es estacionaria alrededor de una media, ademas, en la ultima semana hay una baja afluencia de personas en ambas lineas muy probablemente a causa del covid.


```{r, echo = FALSE,warning=FALSE, message=FALSE}
bind_rows(dat_lin_A, dat_lin_B) |>
  filter(pandemia == "si") |>
  group_by(fecha, linea) |>
  summarise(tot = mean(per.num, na.rm = TRUE)) |>
  ggplot(aes(x= fecha, y = tot)) + 
  geom_line() +
  facet_grid(rows = vars(linea), scales = "free") + 
  ylab("Promedio de personas")+
  labs(title = "Despues de la pandemia")
```

en esta serie de tiempo se ve una recuperación en ambas lineas (a y b), no es estacionaria ya que se ve una clara tendencia de crecimiento positivo no lineal.



i).

regresion con lm para dos dataset: antes y despues de la pandemia

puede ser con las covariables: indicadora dia de la semana (lunes, martes etc), mes, hora?

son 4 modelos: antes pandemia linea a antes pandemia linea a despues pandemia linea b despues pandemia linea b

contrastar, dar una interpretación del summary del model

graficar el modelo vs real



## Modelo linea A antes de pandemia:




```{r}
df.lin.A <- dat_lin_A |> filter(pandemia == "no")
df.lin.A$dia.sem <- as.factor(df.lin.A$dia.sem)

acf(df.lin.A$per.dia.tot)
pacf(df.lin.A$per.dia.tot)

serie <- ts(df.lin.A$per.dia.tot, start = 2019, frequency = 12)
decom <- decompose(serie)
plot(decom)

model.lin.A <- lm(per.dia.tot ~ dia.sem, data = df.lin.A)
kable(xtable(summary(model.lin.A)))


df.lin.A$pred <- predict(model.lin.A, newdata = df.lin.A)
df.lin.A$per.dia.tot <- as.numeric(df.lin.A$per.dia.tot)
df.lin.A$pred <- as.numeric(df.lin.A$pred)

ajust <- df.lin.A %>% gather(key="Linea", value="Cantidad", per.dia.tot, pred)


ajust %>% ggplot(aes(x=fecha, y=Cantidad,
col=Linea))+
geom_line()
```




## Modelo linea A despues de pandemia:

```{r}
df.lin.A.p <- dat_lin_A |> filter(pandemia == "si")
df.lin.A.p$dia.sem <- as.factor(df.lin.A.p$dia.sem)

acf(df.lin.A.p$per.dia.tot)
pacf(df.lin.A.p$per.dia.tot)

serie <- ts(df.lin.A.p$per.dia.tot, start = 2019, frequency = 12)
decom <- decompose(serie)
plot(decom)

model.lin.A.p <- lm(per.dia.tot ~ dia.sem, data = df.lin.A.p)
kable(xtable(summary(model.lin.A.p)))


df.lin.A.p$pred <- predict(model.lin.A.p, newdata = df.lin.A.p)
df.lin.A.p$per.dia.tot <- as.numeric(df.lin.A.p$per.dia.tot)
df.lin.A.p$pred <- as.numeric(df.lin.A.p$pred)

ajust <- df.lin.A.p %>% gather(key="Linea", value="Cantidad", per.dia.tot, pred)


ajust %>% ggplot(aes(x=fecha, y=Cantidad,
col=Linea))+
geom_line()
```

## Modelo linea B antes de pandemia:

```{r}
df.lin.B <- dat_lin_B |> filter(pandemia == "no")
df.lin.B$dia.sem <- as.factor(df.lin.B$dia.sem)

acf(df.lin.B$per.dia.tot)
pacf(df.lin.B$per.dia.tot)

serie <- ts(df.lin.B$per.dia.tot, start = 2019, frequency = 12)
decom <- decompose(serie)
plot(decom)

model.lin.B <- lm(per.dia.tot ~ dia.sem, data = df.lin.B)
kable(xtable(summary(model.lin.B)))


df.lin.B$pred <- predict(model.lin.B, newdata = df.lin.B)
df.lin.B$per.dia.tot <- as.numeric(df.lin.B$per.dia.tot)
df.lin.B$pred <- as.numeric(df.lin.B$pred)

ajust <- df.lin.B %>% gather(key="Linea", value="Cantidad", per.dia.tot, pred)


ajust %>% ggplot(aes(x=fecha, y=Cantidad,
col=Linea))+
geom_line()
```

## Modelo linea B despues de pandemia: 

```{r}
df.lin.B.p <- dat_lin_B |> filter(pandemia == "si")
df.lin.B.p$dia.sem <- as.factor(df.lin.B.p$dia.sem)

acf(df.lin.B.p$per.dia.tot)
pacf(df.lin.B.p$per.dia.tot)

serie <- ts(df.lin.B.p$per.dia.tot, start = 2019, frequency = 12)
decom <- decompose(serie)
plot(decom)

model.lin.B.p <- lm(per.dia.tot ~ dia.sem, data = df.lin.B.p)
kable(xtable(summary(model.lin.B.p)))


df.lin.B.p$pred <- predict(model.lin.B.p, newdata = df.lin.B.p)
df.lin.B.p$per.dia.tot <- as.numeric(df.lin.B.p$per.dia.tot)
df.lin.B.p$pred <- as.numeric(df.lin.B.p$pred)

ajust <- df.lin.B.p %>% gather(key="Linea", value="Cantidad", per.dia.tot, pred)


ajust %>% ggplot(aes(x=fecha, y=Cantidad,
col=Linea))+
geom_line()
```



















